const fs = require('fs');
// const index = fs.readFileSync('index.html','utf-8');
const data = JSON.parse(fs.readFileSync('data.json','utf-8'));
const products = data.products;
const express = require('express');
const morgan = require('morgan');


const server = express();

//body parser
server.use(express.json());
server.use(morgan('default'));
server.use(express.static('public'));

//Api-(end-point)-Route
//rest api
//1. all products
server.get('/products',(req,res)=>{
    res.json(products);
})
//2. single product
server.get('/products/:id',(req,res)=>{
    // console.log(req.params);
    const id = +req.params.id;
    const product=products.find(p=>p.id===id)
    res.json(product);
});
//create product
server.post('/products/',(req,res)=>{
    console.log(req.body);
    products.push(req.body);
    res.status(201).json(req.body);
})
//Replace the  product
server.put('/products/:id',(req,res)=>{
    const id = +req.params.id;
    const productIndex = products.findIndex(p=>p.id===id);
    products.splice(productIndex,1,{...req.body,id:id})
    res.status(201).json(req.body);
})

//patch//update the particular product
server.patch('/products/:id',(req,res)=>{
    const id = +req.params.id;
    const productIndex = products.findIndex(p=>p.id===id);
    const product = products[productIndex];
    products.splice(productIndex,1,{...product,...req.body});
    res.status(201).json(req.body);
});
//delete
server.delete('/products/:id',(req,res)=>{
    const id = +req.params.id;
    const productIndex = products.findIndex(p=>p.id===id);
    const product = products[productIndex];
    products.splice(productIndex,1);
    res.status(201).json(product);
});
server.listen(8000 ,()=>{
    console.log('server started')
});
